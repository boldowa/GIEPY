//----------------------------------------------------------
//  piee.rc
//----------------------------------------------------------

#include "common/version.h"
#include <windows.h>
#include "win32/icon.h"
#define GUI 1
#define isWindows 1
//#include "common/strres.h"

// StringVersionInfo
#define ResV(i) Res(i)
#define _Res(s,term)	s # term
#define Res(s)		_Res(#s,\0)

ICON_PIEE	ICON	DISCARDABLE	"piee.ico"

CREATEPROCESS_MANIFEST_RESOURCE_ID RT_MANIFEST "piee.manifest"

VS_VERSION_INFO VERSIONINFO
	FILEVERSION	Win32ResVersion
	PRODUCTVERSION	Win32ResVersion
	FILEOS		VOS__WINDOWS32
	FILETYPE	VFT_APP
	FILESUBTYPE	VFT2_UNKNOWN
	FILEFLAGS	0x0L
	FILEFLAGSMASK	VS_FFI_FILEFLAGSMASK
{
	BLOCK "StringFileInfo"
	{
		BLOCK "040904b0"
		{
			VALUE "CompanyName",		"Pieeeeeeeee!!\0"
			VALUE "FileDescription",	"SMW sprites insertion utility\0"
			VALUE "FileVersion",		ResV(Win32FileVersion)
			VALUE "InternalVersion",	"Isamu Akai\0"
			VALUE "OriginalFileName",	"piee.exe\0"
			VALUE "LegalCopyright",		"(C) 2018 Kuso~\0"
			VALUE "ProductName",		ResV(_Win32AppName)
			VALUE "ProductVersion",		ResV(Win32AppVersion)
		}
	}
	BLOCK "VarFileInfo"
	{
		VALUE "Translation", 0x0409, 1200
	}
}

//------------------------------------------------
// Empty dialog box
//------------------------------------------------
EmptyDlg	DIALOG 0,0,100,100
CAPTION		"dlg"
STYLE		WS_POPUP | DS_MODALFRAME | WS_SYSMENU
{
	DEFPUSHBUTTON	"OK", IDOK, 5,70, 50,11,WS_TABSTOP
	PUSHBUTTON	"Cancel", IDCANCEL, 50,70, 50,11,WS_TABSTOP
}


// :P ... I gave up it. too troublesome.
#if 0
#define MESSAGE(id)\
	GSID_##id GSTR_##id
//	GSID_JP_#id GSTR_JP_#id
//#include "common/msgmap_eng.h"
//#include "common/msgmap_jp.h"
STRINGTABLE
BEGIN
	MESSAGE(STR_NOT_FOUND)
	MESSAGE(DEBUG)
	MESSAGE(INFO)
	MESSAGE(INQUIRY)
	MESSAGE(WARN)
	MESSAGE(ERROR)
	MESSAGE(FATAL)
	MESSAGE(STRING)

	/*** generic ***/
	MESSAGE(MEW_LOAD_FAILED)
	MESSAGE(MEMALLOC_FAILED)
	MESSAGE(PROCESS_FAILED)
	MESSAGE(PROCESS_SUCCEED)
	MESSAGE(UNINSTALLING)

	/* option */
	MESSAGE(OPTION_PARSE_FAILED)
	MESSAGE(UNKNOWN_OPTION)
	MESSAGE(OPTION_ARGMISSING)
	MESSAGE(OPTION_INVALID)
	MESSAGE(OPTION_MISSPARSER)
	MESSAGE(OPTION_USAGE)
	MESSAGE(OPTION_MOREINFO)

	/* rom file */
	MESSAGE(ROM_OPEN_FAILED)
	MESSAGE(ROM_IS_NOT_SMW)
	MESSAGE(ROM_WRITE_FAILED)

	/* asm file */
	MESSAGE(ASM_OPEN_FAILED)

	/* list file */
	MESSAGE(LIST_NOT_FOUND)
	MESSAGE(LIST_OPEN_FAILED)
	MESSAGE(LIST_PARSE_START)
	MESSAGE(LIST_PARSE_FAILED)
	MESSAGE(LIST_SYNTAX_ERROR)
	MESSAGE(LIST_INVALID_SECTION)
	MESSAGE(LIST_SECTION_MATCH)
	MESSAGE(LIST_INSERT_NUM_LARGE)
	MESSAGE(LIST_INSERT_NUM_FEW)
	MESSAGE(LIST_INSERT_CONFLICT)

	/* Uninstall */
	MESSAGE(UNINSTALL_NOT_INSTALLED)
	MESSAGE(UNINSTALL_RESADR_NULL)
	MESSAGE(UNINSTALL_DATA_BROKEN)
	MESSAGE(UNINSTALL_INVALID_RATS)
	MESSAGE(UNINSTALL_RATSCLEAN_NG)
	MESSAGE(UNINSTALL_PROCESS_GRP)
	MESSAGE(UNINSTALL_EXTENDED)
	MESSAGE(UNINSTALL_CLUSTER)
	MESSAGE(UNINSTALL_OVERWORLD)
	MESSAGE(UNINSTALL_SPRITES)
	MESSAGE(UNINSTALL_LIBRARIES)
	MESSAGE(UNINSTALL_COREDATA)
	MESSAGE(UNINSTALL_RESTORE)
	MESSAGE(UNINSTALL_CLEANING)
	MESSAGE(UNINSTALL_TWEAKING)
	MESSAGE(UNINSTALL_TWEAKS)
	MESSAGE(UNINSTALL_LEAKDATA)
	MESSAGE(UNINSTALL_NOTIMP_RES)

	/* Insert */
	MESSAGE(INSERT_PARSE_LIST)
	MESSAGE(INSERT_CREATE_WORKSP)
	MESSAGE(INSERT_COLLECT_LIBS)
	MESSAGE(INSERT_INITIALIZE_ROM)
	MESSAGE(INSERT_SPRITES)
	MESSAGE(INSERT_EXTENDED)
	MESSAGE(INSERT_CLUSTER)
	MESSAGE(INSERT_OVERWORLD)
	MESSAGE(INSERT_CLEAN_WORKSP)
	MESSAGE(INSERT_ASSEMBLE_ALL)
	MESSAGE(INSERT_CHK_DATA_LEAK)
	MESSAGE(INSERT_DATA_LEAK_DETECT)

	/* library */
	MESSAGE(LIBRARY_FOUND)
	MESSAGE(LIBRARY_CANT_OPEN)
	MESSAGE(LIBRARY_NOTHING)
	MESSAGE(LIBRARY_FILE_NUMBERS)
	MESSAGE(LIBRARY_LABEL_NUMBERS)

	/* assemble */
	MESSAGE(ASSEMBLE_FILE)
	MESSAGE(ASSEMBLE_FAILED)
	MESSAGE(ASSEMBLE_STR_WITH_ASMNAME)
	MESSAGE(ASSEMBLE_CFG_NOT_FOUND)
	MESSAGE(ASSEMBLE_EMPTY_ASM)
	MESSAGE(ASSEMBLE_USING_ASAR)
	MESSAGE(ASSEMBLE_USING_TRASM)
	MESSAGE(ASSEMBLE_ASM_NOT_FOUND)
	MESSAGE(ASSEMBLE_CFG_READ_ERROR)
	MESSAGE(ASSEMBLE_CFG_PROC_FAILED)
	MESSAGE(ASSEMBLE_BIN_OPEN_ERROR)
	MESSAGE(ASSEMBLE_PIPE_OPEN_ERROR)
	MESSAGE(ASSEMBLE_TRASM_ERR_COL)
	MESSAGE(ASSEMBLE_TRASM_LO_ONLY)
	MESSAGE(ASSEMBLE_ENTRY_NOT_FOUND)
	MESSAGE(ASSEMBLE_FREE_NOT_FOUND)

	/* parse cfg */
	MESSAGE(PARSECFG_FIELDS_TOO_FEW)
	MESSAGE(PARSECFG_READING_FILE)
	MESSAGE(PARSECFG_SYNTAX_ERROR)
	MESSAGE(PARSECFG_OLD_FORMAT_SP)
	MESSAGE(PARSECFG_OLD_FORMAT_SH)
	MESSAGE(PARSECFG_OLD_FORMAT_GEN)

	/* extended / cluster */
	MESSAGE(EXTCLS_BROKEN_RELOC_ADR)
	MESSAGE(EXTCLS_EXTENDED_LOCATION)
	MESSAGE(EXTCLS_CLUSTER_LOCATION)

	/* sprites */
	MESSAGE(SPRITES_TWEAKS_LOC)
	MESSAGE(SPRITES_TABLE_GRP_LOC)

	/* initialize */
	MESSAGE(INITIALIZE_OLD_TOOL)
	MESSAGE(INITIALIZE_FORCE)
	MESSAGE(INITIALIZE_EXBYTE_QUES)
	MESSAGE(INITIALIZE_TERMED)
	MESSAGE(INITIALIZE_UPDATING)
	MESSAGE(INITIALIZE_UPDATE_NG)
	MESSAGE(INITIALIZE_INSTALLING)
	MESSAGE(INITIALIZE_VER_NOT_MATCH)
	MESSAGE(INITIALIZE_EXB_LMVER_SMALL)

	/* collect info */
	MESSAGE(COLLECT_LM_NOT_INSTALLED)
	MESSAGE(COLLECT_UNKNOWN_CHUNK)
	MESSAGE(COLLECT_LM_DOWNGRADED)
	MESSAGE(COLLECT_BROKEN_ROM)

	/* chkasm */
	MESSAGE(CHKASM_JUDGE_TRASM)
	MESSAGE(CHKASM_JUDGE_ASAR)
	MESSAGE(CHKASM_NON_COLON_TRASM)
	MESSAGE(CHKASM_COLON_ASAR)

	/* exbytes */
	MESSAGE(EXBYTES_SPR_DATA_REMAP)
	MESSAGE(EXBYTES_INVALID_ADDR)
	MESSAGE(EXBYTES_SPRTERM_NOT_FOUND)

	/* ramen */
	MESSAGE(RAMEN_END)
	MESSAGE(RAMEN_END_TITLE)

	/* Menu */
	MESSAGE(MENU_FILE)
	MESSAGE(MENU_FILE_INSERT)
	MESSAGE(MENU_FILE_UNINSTALL)
	MESSAGE(MENU_FILE_EXIT)
END
#endif
